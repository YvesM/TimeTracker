using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Text;

namespace TimeTracker.Data
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated from a template.
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    using System;
    using System.Data.Objects;
    using System.Data.EntityClient;

    namespace TimeTracker.Data
    {
        public partial class TimeTrackerContext : DbContext
        {
            public const string ConnectionString = "Data Source=.;Initial Catalog=TimeTracker;Integrated Security=True";

            #region Constructors

            public TimeTrackerContext()
                : base(ConnectionString)
            {
                this.Configuration.LazyLoadingEnabled = true;
            }

            public TimeTrackerContext(string connectionString)
                : base(connectionString)
            {
                this.Configuration.LazyLoadingEnabled = true;
            }

            #endregion

            protected override void OnModelCreating(DbModelBuilder modelBuilder)
            {
                modelBuilder.Entity<Project>().Map(m =>
                {
                    m.MapInheritedProperties();
                    m.ToTable("Project");
                });

                modelBuilder.Entity<Booking>().Map(m =>
                {
                    m.MapInheritedProperties();
                    m.ToTable("Booking");
                });

                modelBuilder.Entity<User>().Map(m =>
                {
                    m.MapInheritedProperties();
                    m.ToTable("User");
                });
            }

            public DbSet<User> Users
            {
                get { return _users ?? (_users = Set<User>()); }
            }
            private DbSet<User> _users;

            public DbSet<Booking> Bookings
            {
                get { return _bookings ?? (_bookings = Set<Booking>()); }
            }
            private DbSet<Booking> _bookings;

            public DbSet<Project> Projects
            {
                get { return _projects ?? (_projects = Set<Project>()); }
            }
            private DbSet<Project> _projects;

        }
    }

}
